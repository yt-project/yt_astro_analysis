language: python
sudo: false
cache:
  directories:
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853
    - $YT_DIR
    - $YT_DATA
  pip: true

git:
  depth: 9999999

addons:
  apt:
    packages:
      - libhdf5-serial-dev
      - openmpi-bin
      - libopenmpi-dev

env:
  global:
    NUMPY=numpy
    CYTHON=cython
    MATPLOTLIB=matplotlib
    SYMPY=sympy
    H5PY=h5py
    SCIPY=scipy
    IPYTHON=ipython
    FASTCACHE=fastcache
    ROCKSTAR_DIR=$HOME/rockstar
    YT_DIR=$HOME/yt-git
    YT_DATA=$HOME/yt_test
    TEST_DIR=$HOME/test_results
    TEST_FLAGS="--with-answer-testing --local --local-dir $TEST_DIR --answer-name=astro_analysis --answer-big-data"

matrix:
  include:
    - python: 2.7
      env: NUMPY=numpy==1.10.4 CYTHON=cython==0.24 MATPLOTLIB=matplotlib==1.5.3 SYMPY=sympy==1.0 H5PY= SCIPY= FASTCACHE= IPYTHON=ipython==1.0
    - python: 2.7
    - python: 3.5
    - python: 3.6

before_install:
  - |
    pip install --upgrade virtualenv
    python -m virtualenv venv
    source venv/bin/activate
    export PATH=/usr/lib/ccache:$PATH
    # configure yt
    mkdir -p $HOME/.config/yt
    echo "[yt]" > $HOME/.config/yt/ytrc
    echo "suppressStreamLogging = True" >> $HOME/.config/yt/ytrc
    echo "test_data_dir = $YT_DATA" >> $HOME/.config/yt/ytrc
    cat $HOME/.config/yt/ytrc

install:
  - |
    # setup environment
    ccache -s
    # Upgrade pip and setuptools and wheel to get clean install
    pip install --upgrade pip
    pip install --upgrade wheel
    pip install --upgrade setuptools
    # Install dependencies
    pip install mock $NUMPY $SCIPY $H5PY $CYTHON $MATPLOTLIB $SYMPY $FASTCACHE $IPYTHON flake8 nose nose-timer girder-client mpi4py
    # install yt
    if [ ! -f $YT_DIR/README.md ]; then
        git clone --branch=master https://github.com/yt-project/yt $YT_DIR
    fi
    pushd $YT_DIR
    git pull
    git checkout master
    pip install -e .
    popd
    # install rockstar
    git clone https://github.com/yt-project/rockstar $ROCKSTAR_DIR
    pushd $ROCKSTAR_DIR
    make lib
    popd
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROCKSTAR_DIR
    echo $ROCKSTAR_DIR > rockstar.cfg

before_script:
  - |
    # download test data
    if [ ! -f $YT_DATA/enzo_tiny_cosmology/DD0046/DD0046 ]; then
        mkdir -p $YT_DATA
        girder-cli --api-url https://girder.hub.yt/api/v1 download 577c09480d7c6b0001ad5be2 $YT_DATA/enzo_tiny_cosmology
    fi

script:
  - |
    git checkout gold-standard-v2
    pip install -e .
    nosetests $TEST_FLAGS --answer-store
    git checkout master
    pip install -e .
    nosetests $TEST_FLAGS
